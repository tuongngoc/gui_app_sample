diff  D:/Tutorial_Refs/amy_imgui/gui_app_sample/src/main.cpp D:/Tutorial_Refs/amy_imgui/gui_app_sample/src/main.cpp.Orig
10,37c10,11
< 
< //---------------------------------------------------------------
< // About Desktop OpenGL function loaders:
< //  Modern desktop OpenGL doesn't have a standard portable header file to load
< //  OpenGL function pointers. Helper libraries are often used for this purpose!
< //  Here we are supporting a few common ones (gl3w, glew, glad). You may use
< //  another loader/header of your choice (glext, glLoadGen, etc.), or chose to
< //  manually implement your own.
< #if defined(IMGUI_IMPL_OPENGL_LOADER_GL3W)
< #include <GL/gl3w.h> // Initialize with gl3wInit()
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLEW)
< #include <GL/glew.h> // Initialize with glewInit()
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLAD)
< #include <glad/glad.h> // Initialize with gladLoadGL()
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLAD2)
< #include <glad/gl.h> // Initialize with gladLoadGL(...) or gladLoaderLoadGL()
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLBINDING2)
< #define GLFW_INCLUDE_NONE // GLFW including OpenGL headers causes ambiguity or
<                           // multiple definition errors.
< #include <glbinding/Binding.h> // Initialize with glbinding::Binding::initialize()
< #include <glbinding/gl/gl.h>
< using namespace gl;
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLBINDING3)
< //#define GLFW_INCLUDE_NONE       // GLFW including OpenGL headers causes
< //ambiguity or multiple definition errors.
< #include <glbinding/glbinding.h> // Initialize with glbinding::initialize()
< #include <glbinding/gl/gl.h>
< using namespace gl;
---
> #if defined(IMGUI_IMPL_OPENGL_ES2)
> #include <GLES2/gl2.h>
90,120d63
<     //-----------------------------------------------------
<     // Initialize OpenGL loader
< #if defined(IMGUI_IMPL_OPENGL_LOADER_GL3W)
<     bool err = gl3wInit() != 0;
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLEW)
<     bool err = glewInit() != GLEW_OK;
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLAD)
<     bool err = gladLoadGL() == 0;
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLAD2)
<     bool err = gladLoadGL(glfwGetProcAddress) ==
<                0; // glad2 recommend using the windowing library loader instead
<                   // of the (optionally) bundled one.
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLBINDING2)
<     bool err = false;
<     glbinding::Binding::initialize();
< #elif defined(IMGUI_IMPL_OPENGL_LOADER_GLBINDING3)
<     bool err = false;
<     glbinding::initialize([](const char *name) {
<         return (glbinding::ProcAddress)glfwGetProcAddress(name);
<     });
< #else
<     bool err = false; // If you use IMGUI_IMPL_OPENGL_LOADER_CUSTOM, your loader
<                       // is likely to requires some form of initialization.
< #endif
<     if (err) {
<         fprintf(stderr, "Failed to initialize OpenGL loader!\n");
<         return 1;
<     }
<     
<     //-----------------------------------------------------
< 
134c77
<     //ImGui::StyleColorsClassic();
---
>     //ImGui::StyleColorsLight();
